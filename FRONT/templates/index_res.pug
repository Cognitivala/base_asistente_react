html(lang="es-CL" dir="ltr" xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://ogp.me/ns/fb#" heightfull)
  head
    title Configurar Asistente. MAD Cognitiva

    include includes/meta.pug

  body.no-scroll.home(heightfull)
    #wrapper(heightfull)
      .f-row(heightfull)
        
        include includes/menu.pug

        .f-col.content.relative-position(padding heightfull)
          include includes/spinner.pug
          include includes/user.pug
          
          .row
            .col-md-12
              .container-tabs
                .test
                  a(href="#;", onclick="openModalTest()")
                    | Probar asistente
                    i.fa.fa-commenting(aria-hidden="true")
                  a(href="#;", onclick="openDemo(event)")
                    | Demo
                    i.fa.fa-rocket(aria-hidden="true")

                ul#tabs.nav.nav-tabs(role="tablist")
                  li.active(role="presentation")
                    a(href="#" data-func="toggleTabs" data-index="0")
                      span Intenciones
                  li(role="presentation")
                    a(href="#" data-func="toggleTabs" data-index="1")
                      span Entidades
                  li(role="presentation")
                    a(href="#" data-func="toggleTabs" data-index="2")
                      span Diálogo
                  li(role="presentation")
                    a(href="#" data-func="toggleTabs" data-index="3")
                      span URL

                .tab-content

                  #intents.tab-pane.fade.in.active(role="tabpanel" data-tab-target="0")
                    button#new-intent(button button-mini margin-bottom onclick="openCustomModal(this, '#modal-intent', false, 'create_intent')")
                      | Añadir intención 
                      i.fa.fa-plus-circle( aria-hidden="true")

                    ul#list-intents.list-intents

                    include includes/modal-intents.pug
                    include includes/modal-intents-edit.pug

                  #entities.tab-pane.fade(role="tabpanel" data-tab-target="1")
                    button#new-entitie(button button-mini margin-bottom onclick="openCustomModal(this, '#modal-entities', false, 'create_entity')" )
                      | Añadir entidad 
                      i.fa.fa-plus-circle( aria-hidden="true")

                    ul#list-entities.list-intents

                    include includes/modal-entities.pug
                    include includes/modal-entities-edit.pug

                  #dialog.tab-pane.fade(role="tabpanel" data-tab-target="2")
                    button#new-dialog(button button-mini margin-bottom onclick="openCustomModal(this, '#modal-dialog', false, 'create_dialog')")
                      | Añadir diálogo 
                      i.fa.fa-plus-circle( aria-hidden="true")

                    ul.list-intents#list-dialogs

                    include includes/modal-dialog.pug
                    include includes/modal-dialog-edit.pug
                    include includes/modal-choice-dialog.pug

                  #url.tab-pane.fade(role="tabpanel", data-tab-target="3")
                    form#form-url
                      fieldset
                        label Ingresa la url del sitio en donde estará el asistente
                        input#get-url(type="url", pattern="https?://.+", placeholder="Ej. https://www.google.cl", required)
                      button#save-url(button onclick="saveUrl()") Guardar

    include includes/modal.pug
    include includes/modal-choice.pug
    include includes/modal-choice-entity.pug
    include includes/modal-examples.pug
    include includes/modal-asistente.pug
    include includes/modal-script.pug

    script(type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js")
    script(type="text/javascript" src="../assets/js/bootstrap.min.js")
    script(type="text/javascript" src="../assets/js/main.js")
    script(type="text/javascript" src="../assets/js/main.mad.js")
    
    script.

      var getModalBool = false;
      var getService = '';
      var getNameIntent = '';
      var makeListIntent = '';
      var getMakeListIntent = '';
      var funcGetIntent = '';
      var funcOpenModal = '';
      var stringObj = '';
      var tree = '';
      var treeBranch = '';
      var nameObj = '';
      var getAllNames = [];
      var getSession = sessionStorage.getItem('user_id');

      function openDemo(e){
        var screenW   = this.outerWidth;
        var screenH   = this.outerHeight;
        var getSize   = '"width='+outerWidth+',height='+outerHeight+'"'; 
        window.open("/demo/", "_blank", getSize);
        e.preventDefault();
      }

      function spinnerOut(parent, bool){
        if(bool == true) {
          $(parent+' .spinner').fadeIn(300);
        } else {
          $(parent+' .spinner').fadeOut(300);
        }
      }

      function getAllIntents(){
        var req = new XMLHttpRequest();
        var form = new FormData();
        form.append("id_cliente", getSession);
        req.open("POST", getPath+"mant/list_intents", false); 
        req.send(form);
        if (req.status == 200) {
          var response = JSON.parse(req.responseText);
          var makeListIntent = '';
          var funcRemoveItem = "'delete_intent'";
          for(var i = 0; i < response.intents.length; i++) {
            var theIntent = "'"+response.intents[i].intent+"'";
            makeListIntent = '<li>';
            makeListIntent += '<div>';
            makeListIntent += '<a href="#;" onclick="getIntentExamples(this,'+theIntent+')">';
            makeListIntent += '<i class="fa fa-angle-right" aria-hidden="true"></i>';
            makeListIntent += '<h5>#'+response.intents[i].intent+'</h5>';
            makeListIntent += '</a>';
            //- makeListIntent += '<a href="#;" onclick="removeItem(this,'+funcRemoveItem+')"><i class="fa fa-trash"></i></a>';
            makeListIntent += '<a href="#;" onclick="deleteIntent(event)"><i class="fa fa-trash"></i></a>';
            makeListIntent += '</div>';
            makeListIntent += '</li>';
            $('#list-intents').append(makeListIntent);
          }
          spinnerOut('#intents', false);
        } else {
          spinnerOut('#intents', false);
          openModal('#myModal', 'Auch!', 'Tenemos un problema, favor intenta nuevamente', 'error');
        }
      }

      function deleteIntent(event){
        event.preventDefault();
        var $item = $(event.currentTarget);
        
        $('[data-todelete]').removeAttr('data-todelete');
        $item.parent().parent().attr('data-todelete', '1');
        openModal('#myModalChoice', 'Advertencia', '¿Estás seguro que deseas remover este item?', '');
      }

      function getIntentExamples(el, intent){
        if(!el.classList.contains('examples')){
          var req = new XMLHttpRequest();
          var form = new FormData();

          var makeListIntent, getMakeListIntent = '';
          var funcGetIntent = "getIntent(this, '#modal-intent', '#name-intent', 'fieldset-intent')";
          var funcOpenModal = "openCustomModal(this,'#modal-intent', true, 'edit_intent')";
          var getService = 'edit_intent';
          form.append("id_cliente", getSession);
          form.append("intent", intent);
          req.open("POST", getPath+"mant/list_examples", false); 
          req.send(form);
          if (req.status == 200) {
            var response = JSON.parse(req.responseText);
            if(response.examples.length > 0){
              for(var i = 0; i < response.examples.length; i++){
                getMakeListIntent += '<li>';
                getMakeListIntent += '<label>';
                getMakeListIntent += '<div class="checkbox"><input type="checkbox"/><span></span></div>';
                getMakeListIntent += '<span>'+response.examples[i].text+'</span>';
                getMakeListIntent += '</label>';
                getMakeListIntent += '</li>';
              }
              makeListIntent = '<ul>';
              makeListIntent += '<li class="options">';
              makeListIntent += '<button button="button" button-mini="button-mini" secondary="secondary" onclick="'+funcGetIntent+'; '+funcOpenModal+'">Editar / Añadir ejemplo<i class="fa fa-plus-circle" aria-hidden="true"></i></button>';
              makeListIntent += '<a href="#;" onclick="deleteExamples(this,';
              makeListIntent += "'"+getService+"'";
              makeListIntent += ')"><i class="fa fa-trash"></i></a>';
              makeListIntent += '</li>';
              makeListIntent += getMakeListIntent;
              makeListIntent += '</ul>';

              el.parentElement.parentElement.insertAdjacentHTML( 'beforeend', makeListIntent );
              el.classList.add('examples');
            }
          } else {
            spinnerOut('#intents', false);
            openModal('#myModal', 'Auch!', 'Tenemos un problema, favor intenta nuevamente', 'error');
          }
        }
        myClick(el);
        getExamplesNum();
      }

      function getAllEntities(){
        getService = 'edit_entity';
        var req = new XMLHttpRequest();
        var form = new FormData();
        form.append("ws_id", sessionStorage.getItem('uws'));
        form.append("cv_user", sessionStorage.getItem('usr'));
        form.append("cv_pass", sessionStorage.getItem('usp'));
        req.open('POST', getPath+'mant/list_entities', false); 
        req.send(form);
        if (req.status == 200 && JSON.parse(req.responseText).data.length > 0) {
          var response = JSON.parse(req.responseText);
          for(var i = 0; i < response.data.length; i++){
            getAllNames.push('@'+response.data[i].intents.entity.entity);
            getMakeListIntent = '';
            funcGetIntent = "getIntent(this, '#modal-entities', '#name-entity', 'fieldset-entity')";
            funcOpenModal = "openCustomModal(this,'#modal-entities', true, 'edit_entity')";
            funcRemoveItem = "'delete_entity'";
            for(var j = 0; j < response.data[i].intents.values.length; j++){
              getMakeListIntent += '<li>';
              getMakeListIntent += '<label>';
              getMakeListIntent += '<div class="checkbox"><input type="checkbox"/><span></span></div>';
              getMakeListIntent += '<span>'+response.data[i].intents.values[j].value+'</span>';
              getMakeListIntent += '</label>';
              getMakeListIntent += '</li>';
            }
            makeListIntent = '<li>';
            makeListIntent += '<div>';
            makeListIntent += '<a href="#;" onclick="myClick(this)">';
            makeListIntent += '<i class="fa fa-angle-right" aria-hidden="true"></i>';
            makeListIntent += '<h5>@'+response.data[i].intents.entity.entity+'</h5>';
            makeListIntent += '</a>';
            makeListIntent += '<a href="#;" onclick="removeItem(this, '+funcRemoveItem+')"><i class="fa fa-trash"></i></a>';
            makeListIntent += '</div>';
            makeListIntent += '<ul>';
            makeListIntent += '<li class="options">';
            makeListIntent += '<button button="button" button-mini="button-mini" secondary="secondary" onclick="'+funcGetIntent+'; '+funcOpenModal+'">Editar / Añadir ejemplo<i class="fa fa-plus-circle" aria-hidden="true"></i></button>';
            makeListIntent += '<a href="#;" onclick="deleteExamples(this,';
            makeListIntent += "'"+getService+"'";
            makeListIntent += ')"><i class="fa fa-trash"></i></a>';
            makeListIntent += '</li>';
            makeListIntent += getMakeListIntent;
            makeListIntent += '</ul>';
            makeListIntent += '</li>';
            $('#list-entities').append(makeListIntent);
          }
          getExamplesNum();
          spinnerOut('#entities');
        } else {
          spinnerOut('#entities');
        }
      }

      function openCustomModal(el, modal, bool, service) {
        if(modal == '#modal-dialog' || modal == '#modal-dialog-edit'){
          var options = '';
          var select = modal == '#modal-dialog' ? $(modal).find('#condition') : $(modal).find('#condition-edit');
          options = '<option selected value="">Seleccione</option>'
          for(var i = 0; i < window.dataConditions.length; i++){
            options += '<option value="'+ window.dataConditions[i] +'">'+ window.dataConditions[i] +'</option>';
          }
          select.html(options);
        }
        getService = service;
        $(modal).fadeIn(200);
        $(modal).delay(200).find('.container-form').addClass('active');
        $(modal).find('.buttons, form').fadeIn(200);
        getModalBool = bool;
        if(bool == true){
          el.parentElement.parentElement.parentElement.className = 'to-replace';
        }
      }

      function closeCustomModal(modal){
        $(modal).find('.container-form').removeClass('active');
        $(modal).delay(200).fadeOut(200);
        $(modal).find('.buttons, form').fadeOut(50);
        $(modal).removeClass('error');
        $(modal).removeClass('success');
      }

      $('button.close').click(function(){
        $(this).parent().parent().parent().parent().delay(500).removeClass('error, success');
      });

      function getIntent(el, modal, input, fieldset) {
        var arrList = [];
        var getH5 = el.parentElement.parentElement.parentElement.children[0].children[0].children[1].textContent.substring(1);
        var getLengthExamples = el.parentElement.parentElement.children.length;

        for(var i = 0; i < getLengthExamples; i++){
          if(i != 0){
            var getVal = el.parentElement.parentElement.children[i].children[0].children[1].innerText;
            arrList.push(getVal);
          }
        }
        
        $(modal).find(input).val(getH5);
        $(modal).find('form').attr('data-type', 'edit');

        var getTest = document.getElementById(fieldset);
        var getLabelText = document.getElementById(fieldset).children[3].children[0].innerHTML;
        var getPlaceholder = document.getElementById(fieldset).children[2].attributes[2].textContent;
        for(var i = 0; i < arrList.length; i++){
          var where = document.getElementById(fieldset);        
          var subfieldset = '<fieldset class="wrapper-intent">';
              subfieldset += '<label>'+getLabelText+'</label>';
              subfieldset += '<input class="example-intent" type="text" value="'+arrList[i]+'" placeholder="'+getPlaceholder+'" required="required"/>';
              subfieldset += '<a class="add-intent delete" href="#;" onclick="removeFieldset(this)">';
              subfieldset += '<i class="fa fa-times-circle" aria-hidden="true"></i>';
              subfieldset += '</a>';
              subfieldset += '</fieldset>';
          where.insertAdjacentHTML('beforeend', subfieldset);
        }
      }

      function getExamplesNum(){
        $('ul.list-intents > li').each(function(){
          var num = '';
          if($(this).parent().is("#list-dialogs")){
            var num = $(this).find('ul li').length;
          } else {
            var num = $(this).find('ul li').length - 1 ;
          }
        });
      }
      getExamplesNum();

      function myClick(el){
        var myUl = el.parentElement.parentElement.children[1];
        var myIcon = el.children[0];
        myIcon.classList.toggle("fa-rotate-90");
        if(myUl.style.height == 0 || myUl.style.height == '0px'){
          myUl.style.height = "auto";
        } else {
          myUl.style.height = 0;
        }
      }

      function clearIntent(name, modal){
        var getContRespond  = document.getElementById('responds');
        getContRespond.style.display = "none";
        $('#list-dialogs-respond').empty();
        $(name).val('');
        var getEl = document.querySelectorAll(modal+' .example-intent').length;
        getEl = getEl - 1;
        for(var i = getEl; i >= 0; i--){
          $(modal+' .example-intent')[i].parentElement.remove();
        }
        return false;
      }

      function addFieldset(el, label, placeholder){
        var where = el.parentElement;
        var subfieldset = '<fieldset class="wrapper-intent">';
            subfieldset += '<label>'+label+'</label>';
            subfieldset += '<input class="example-intent" type="text" placeholder="'+placeholder+'" required="required"/>';
            subfieldset += '<a class="add-intent delete" href="#;" onclick="removeFieldset(this)">';
            subfieldset += '<i class="fa fa-times-circle" aria-hidden="true"></i>';
            subfieldset += '</a>';
            subfieldset += '</fieldset>';
        where.insertAdjacentHTML('beforeend', subfieldset);
      }

      function removeFieldset(el){
        el.parentElement.remove();
      }

      function removeItem(el, service){
        getService = service;
        el.parentElement.parentElement.setAttribute('data-todelete', '1');
        openModal('#myModalChoice', 'Advertencia', '¿Estás seguro que deseas remover este item?', '');
      }

      function confirmDelete(){
        getNameIntent = $('[data-todelete] h5').text().substring(1);
        var getDataAttr = document.querySelectorAll('[data-todelete]');
        switch (getService) {
          case 'delete_intent':
            tree = 'intent';
            treeBranch = 'examples';
            nameObj = "'text'";
            break;
          case 'delete_entity':
            tree = 'entity';
            treeBranch = 'new_values';
            nameObj = "'value'";
        }
        var req = new XMLHttpRequest();
        var form = new FormData();
        form.append(tree, getNameIntent);
        form.append("ws_id", sessionStorage.getItem('uws'));
        form.append("cv_user", sessionStorage.getItem('usr'));
        form.append("cv_pass", sessionStorage.getItem('usp'));
        req.open('POST', getPath+"mant/"+getService, false); 
        req.send(form);
        if (req.status == 200) {
          var response = JSON.parse(req.responseText);
          var msg = '';
          if(getService == 'delete_intent'){
            $('#list-intents').empty();
            msg = 'La intención se ha eliminado con éxito'
          } else {
            $('#list-entities').empty();
            msg = 'La entidad se ha eliminado con éxito'
          }
          openModal('#myModal', 'Genial!', msg, 'success');
        } else {
          openModal('#myModal', 'Auch!', 'Tenemos un problema, favor intenta nuevamente', 'error');
        }
        $('[data-todelete]').remove();
      }

      function removeData(){
        $('[data-todelete]').removeAttr('data-todelete');
      }

      function deleteExamples(el, service){
        var getChildren = el.parentElement.parentElement.children;
        var getParent = el.parentElement.parentElement.parentElement.parentElement.id;
        if(getParent == 'list-intents'){
          getService = 'edit_intent';
        } else if(getParent == 'list-entities'){
          getService = 'edit_entity';
        } else {
          getService = 'edit_dialog';
        }
        var count = 0;
        for(var i=0; i<getChildren.length; i++){
          if(i != 0) {
            getCheckBox = getChildren[i].children[0].children[0].children[0];
            if(getCheckBox.checked) {
              count = count + 1;
            }
          }
        }
        if(count > 0){
          el.parentElement.parentElement.className = 'delete-examples-tmp';
          openModal('#myModalExamples', 'Advertencia', '¿Estás seguro de lo que deseas remover?', '');
        } else {
          openModal('#myModal', 'Advertencia', 'Debes seleccionar al menos <b>un</b> ejemplo', 'error');
        }
      }

      function confirmDeleteExamples(tree, treeBranch){
        stringObj = '';
        var nameVal = '';
        switch (getService) {
          case 'create_intent':
            tree = 'intent';
            treeBranch = 'examples';
            nameObj = "'text'";
            break;
          case 'edit_intent':
            tree = 'intent';
            treeBranch = 'new_examples';
            nameObj = "'text'";
            break;
          case 'create_entity':
            tree = 'entity';
            treeBranch = 'values';
            nameObj = "'value'";
            break;
          case 'edit_entity':
            tree = 'entity';
            treeBranch = 'new_values';
            nameObj = "'value'";
        }
        var getClass = document.getElementsByClassName('delete-examples-tmp');
        getNameIntent = getClass[0].parentElement.children[0].children[0].children[1].textContent.substring(1);
        for(var i = getClass[0].children.length-1; i > 0; i--){
          if(getClass[0].children[i].children[0].children[0].children[0].checked == true){
            getClass[0].children[i].remove();
          } else {
            stringObj += "{"+nameObj+": '"+getClass[0].children[i].children[0].children[1].textContent+"'},";
          }
        }
        stringObj = stringObj.substring(0, stringObj.length-1);
        if(stringObj == ""){
          stringObj = "{}";
        }
        var req = new XMLHttpRequest();
        var form = new FormData();
        form.append(tree, getNameIntent);
        form.append(treeBranch, stringObj);
        form.append("ws_id", sessionStorage.getItem('uws'));
        form.append("cv_user", sessionStorage.getItem('usr'));
        form.append("cv_pass", sessionStorage.getItem('usp'));
        req.open('POST', getPath+"mant/"+getService, false); 
        req.send(form);
        if (req.status == 200) {
          var response = JSON.parse(req.responseText);
          openModal('#myModal', 'Genial!', 'La intención se ha actualizado con éxito', 'success');
          getExamplesNum();
        } else {
          openModal('#myModal', 'Auch!', 'Tenemos un problema, favor intenta nuevamente', 'error');
        }
        getNameIntent = '';
        stringObj = '';
        document.getElementsByClassName('delete-examples-tmp')[0].classList.remove('delete-examples-tmp');
      }

      function clickButton(){
        confirmDeleteExamples(tree, treeBranch);
        getExamplesNum();
      }

      function addDialogOption(el){
        var $element = $(el);
        var isEdition = $element.hasClass('edit-button');
        var getModal        = isEdition ? document.getElementById('modal-dialog-edit') : document.getElementById('modal-dialog');
        var getUlDialog     = isEdition ? document.getElementById('list-dialogs-respond-edit') : document.getElementById('list-dialogs-respond');
        var getContRespond  = isEdition ? document.getElementById('responds-edit') : document.getElementById('responds');
        var getCondition    = isEdition ? document.getElementById('condition-edit') : document.getElementById('condition');
        var getTextRespond  = isEdition ? document.getElementById('text-respond-edit') : document.getElementById('text-respond');
        var addListDialog   = '<li>';
            addListDialog  += '<div class="respond">Entonces responde con <textarea>'+getTextRespond.value+'</textarea></div>';
            addListDialog  += '<a class="delete-dialog" href="#;" onclick="deleteDialogList(this)"><i class="fa fa-times-circle" aria-hidden="true"></i></a>';
            addListDialog  += '</li>';
            
        if(getTextRespond.value != '' && getCondition.value != ''){
          if(isEdition){
            $('#list-dialogs-respond-edit').prepend(addListDialog);
          }else{
            $('#list-dialogs-respond').prepend(addListDialog);
          }
          getContRespond.style.display = "block";
          el.parentElement.classList.remove('error');
        } else {
          el.parentElement.classList.add('error');
        }
        getTextRespond.value  = '';
      }

      function deleteDialogList(el){
        el.parentElement.remove();
      }

      function saveDialog(){
        var getDialogService  = getService;
        var getNameDialogQuotes = '';
        var getModal          = document.getElementById('modal-dialog');
        var getUlDialog       = document.getElementById('list-dialogs-respond');
        var getNameDialog     = document.getElementById('name-dialog');
        var getContRespond    = document.getElementById('responds');
        var getTextRespond    = document.getElementById('text-respond');
        var getListDialog     = '';
        var addDialog         = '';
        var getCondition      = document.getElementById('condition');
        var addFunction       = "openCustomModal(this, '#modal-dialog', false, 'edit_dialog'); editDialog(this)";
        var finAndDelete      = document.getElementsByClassName('delete-item-dialog');
        var arrayResponse     = '';
        var addValues         = '';
        if(getNameDialog.value != '' ){
          for(var i = 0; i < getUlDialog.children.length; i++){
            getListDialog += '<li>';
            getListDialog += '<div class="dialogs">'+getUlDialog.children[i].children[0].children[0].textContent+'</div>';
            getListDialog += '</li>';
            if(getUlDialog.children.length > 1) {
              arrayResponse += '"'+getUlDialog.children[i].children[0].children[0].textContent+'",';
            } else {
              arrayResponse = '"'+getUlDialog.children[i].children[0].children[0].textContent+'"';
            }
          }
          if(getUlDialog.children.length > 1) {
            addValues     = '{"values": ['+arrayResponse.substring(0, (arrayResponse.length - 1))+'],"selection_policy": "random"}';
            arrayResponse = addValues;
          }
          addDialog       = '<li data-dialognode="'+getDataNode+'">';
          addDialog      += '<div class="title" data-condition="'+getCondition.value+'">';
          addDialog      += '<span onclick="'+addFunction+'">';
          addDialog      += '<ul class="list-dialogs-hide">';
          addDialog      += getListDialog;
          addDialog      += '</ul>';
          addDialog      += '</span>';
          addDialog      += '<a href="#;" onclick="removeDialog(this)"><i class="fa fa-trash"></i></a>';
          addDialog      += '</div>';
          addDialog      += '</li>';
          if(finAndDelete.length > 0) {
            finAndDelete[0].remove();
          }
          $('#list-dialogs').prepend(addDialog);
          $('.delete-item-dialog').remove();
          if(getDialogService == 'edit_dialog'){
            getNameDialogQuotes = getDataNode;
          } else {
            getNameDialogQuotes = getNameDialog.value;
          }
          var getConditionVal = getCondition.value;
          var req = new XMLHttpRequest();
          var form = new FormData();
          form.append("title", getNameDialogQuotes);
          form.append("conditions", getConditionVal);
          form.append("texto", arrayResponse);
          form.append("ws_id", sessionStorage.getItem('uws'));
          form.append("cv_user", sessionStorage.getItem('usr'));
          form.append("cv_pass", sessionStorage.getItem('usp'));
          req.open('POST', getPath+"mant/"+getDialogService, false); 
          req.send(form);
          if (req.status == 200) {
            var response = JSON.parse(req.responseText);
            getNameDialog.value           = '';
            getTextRespond.value          = '';
            getUlDialog.innerHTML         = '';
            getContRespond.style.display  = 'none';
            var getOptionLength = getCondition.length;
            openModal('#myModal', 'Genial!', 'La respuesta se ha agregado con éxito', 'success');
            clearIntent('#name-dialog', '#modal-dialog');
            getDataNode = '';
          } else {
            openModal('#myModal', 'Lo sentimos', 'Tenemos un problema. Favor intenta nuevamente.', 'error');
          }
        } else {
          closeCustomModal('#modal-dialog');
          clearIntent('#name-dialog', '#modal-dialog');
          openModal('#myModal', 'Lo sentimos', 'Debes añadir un <b>nombre al diálogo</b>', 'error');
        }
      }
      var getDataNode = '';

      function editDialog(el){
        var $element = $(el),
            $getParentLi = $element.parent().parent(),
            getDataNode = $getParentLi.data('dialognode'),
            $getNameDialog = $('#name-dialog-edit'),
            getDataAttr = $element.parent().data('condition'),
            $getCondition = $('#condition-edit'),
            responses = $getParentLi.data('response');

        $getNameDialog.val(getDataNode);
        $getCondition.val(getDataAttr);

        var html = '';
        for(var i = 0; i < responses.length; i++){
          html  += '<li>';
          html  += '<div class="respond">Entonces responde con <textarea data-autoresize>'+responses[i]+'</textarea></div>';
          html  += '<a class="delete-dialog" href="#;" onclick="deleteDialogList(this)"><i class="fa fa-times-circle" aria-hidden="true"></i></a>';
          html  += '</li>';
        }

        $('#list-dialogs-respond-edit').html(html);
        $('#responds-edit').show();
      }

      function openModalTest() {
        $('#myModalAssistant').modal({
          backdrop: 'static',
          keyboard: false,
          show: true
        });

        var getSession = sessionStorage.getItem('user_id');
        $('#assistant-iframe').attr('src', getPath+'asistente/?id='+getSession);
      }

      function getCustomAssistant(){
        var getSession = sessionStorage.getItem('user_id');
        var getLogoAssistant = '';
        var getAvatarAssistant = '';
        var getColorHeader = '';
        var getColorBubble = '';
        var getColorButtons = '';
        var getTitleAssistant = '';
        if (getSession) {
          getLogoAssistant      = localStorage.getItem('logoAssistant');
          getAvatarAssistant    = localStorage.getItem('avatarAssistant');
          getColorHeader        = localStorage.getItem('colorHeader');
          getColorButtons       = localStorage.getItem('colorButtons');
          getTitleAssistant     = localStorage.getItem('titleAssistant');
          getSubTitleAssistant  = localStorage.getItem('subTitleAssistant');
          getLogoAssistant      = localStorage.getItem('logoAssistant');
          $('#myModalAssistant .header').css('background-color', getColorHeader);
          $('#myModalAssistant .header .close').css('background-color', getColorButtons);
          $('#myModalAssistant .header .titles div').text(getTitleAssistant);
          $('#myModalAssistant .header .titles span').text(getSubTitleAssistant);
          $('#myModalAssistant #header-logotipo').attr('src', getLogoAssistant); 
        }
      }

      function removeDialog(el){
        el.parentElement.parentElement.setAttribute('data-todelete', '1');
        openModal('#myModalChoiceDialog', 'Advertencia', '¿Estás seguro que deseas remover este diálogo?', '');
      }

      function confirmDeleteDialog(){
        getNameDialog = $('[data-todelete] h5').text();
        var req = new XMLHttpRequest();
        var form = new FormData();
        form.append("id_dialog", getNameDialog);
        form.append("ws_id", sessionStorage.getItem('uws'));
        form.append("cv_user", sessionStorage.getItem('usr'));
        form.append("cv_pass", sessionStorage.getItem('usp'));
        req.open('POST', getPath+"mant/delete_dialogs", false); 
        req.send(form);
        if (req.status == 200) {
          var response = JSON.parse(req.responseText);
          openModal('#myModal', 'Genial!', 'El diálogo se ha eliminado con éxito', 'success');
          $('[data-todelete]').remove();
        } else {
          openModal('#myModal', 'Auch!', 'Tenemos un problema, favor intenta nuevamente', 'error');
        }
      }

      function saveUrl() {
        var getSession = sessionStorage.getItem('user_id');
        var getUrlVal = $('#get-url').val();
        var getUrlForm = document.getElementById('form-url');
        if(getUrlForm.checkValidity() == true){
          var req = new XMLHttpRequest();
          var form = new FormData();
          form.append("id_cliente", getSession);
          form.append("url", getUrlVal);
          req.open('POST', getPath+"mant/addurl", false); 
          req.send(form);
          if (req.status == 200) {
            openModal('#myModal', 'Genial!', 'La URL se ha agregado con éxito', 'success');
            localStorage.setItem('urlAssistant', getUrlVal);
            $('#get-url').val(getUrlVal);
          }
        }
        event.preventDefault();
      }

      function getAllDialogs(){
        getService = 'edit_dialogs';
        var req = new XMLHttpRequest();
        var form = new FormData();
        form.append("ws_id", sessionStorage.getItem('uws'));
        form.append("cv_user", sessionStorage.getItem('usr'));
        form.append("cv_pass", sessionStorage.getItem('usp'));
        req.open('POST', getPath+"mant/list_dialogs", false); 
        req.send(form);
        if (req.status == 200) {
          var response = JSON.parse(req.responseText);
          for(var i = 0; i < response.data.dialog_nodes.length; i++){
            var listDialog        = '';
            var paramsFunction    = "this, '#modal-dialog', false, 'edit_dialog'";
            var listDialogRespond = '';
            if(response.data.dialog_nodes[i].conditions == 'false' || response.data.dialog_nodes[i].conditions == 'true' || response.data.dialog_nodes[i].conditions == '' || response.data.dialog_nodes[i].conditions == null){
            } else {
              var getNodeText = response.data.dialog_nodes[i].title;
              if (getNodeText == null){
                getNodeText = 'Sin nombre';
              }
              if(response.data.dialog_nodes[i].output.hasOwnProperty('text')) {
                if(response.data.dialog_nodes[i].output.text.hasOwnProperty('values')){
                  for (var j = 0; j < response.data.dialog_nodes[i].output.text.values.length; j++){ 
                    listDialogRespond += '<li><div class="dialogs"><pre><code>'+response.data.dialog_nodes[i].output.text.values[j]+'</code></pre></div></li>';
                  }
                } else {
                  listDialogRespond += '<li><div class="dialogs"><pre><code>'+response.data.dialog_nodes[i].output.text+'</code></pre></div></li>';
                }
                listDialog  = '<li data-dialognode="'+response.data.dialog_nodes[i].dialog_node+'">';
                listDialog += '  <div class="title" data-condition="'+response.data.dialog_nodes[i].conditions+'">';
                listDialog += '    <span onclick="openCustomModal('+paramsFunction+'); editDialog(this)">';
                listDialog += '      <h5>'+getNodeText+'</h5>';
                listDialog += '      <ul class="list-dialogs-hide">'+listDialogRespond+'</ul>';
                listDialog += '    </span>';
                listDialog += '    <a onclick="removeDialog(this)"><i class="fa fa-trash"></i></a>';
                listDialog += '  </div>';
                listDialog += '</li>';
              }
            }
            $('#list-dialogs').append(listDialog);
          }
          spinnerOut('#dialog');
          getExamplesNum();
        } else {
          openModal('#myModal', 'Lo sentimos', 'Tenemos un problema en el servidor<br><b>Error 500</b>', 'error');
        }
      }
      
      $(function(){
        $('#tabs a').click(function (e) {
          e.preventDefault()
          $(this).tab('show')
        });
        var getSession = sessionStorage.getItem('user_id');
        $('#get-url').val(localStorage.getItem('urlAssistant'));
      });

      
html(lang="es-CL" dir="ltr" xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://ogp.me/ns/fb#" heightfull)
  head
    title Origen. MAD Cognitiva
    
    include ../../includes/meta.pug
    script(src="https://www.gstatic.com/charts/loader.js")
    link(href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet")

  body.no-scroll(heightfull)
  
    #wrapper(heightfull)
      .f-row(heightfull)
        
        include ../../includes/menu.pug

        .f-col.content(padding heightfull)
          
          include ../../includes/user.pug
          
          .row
            .col-md-12

              h1.title-page Origen

              .container-tabs

                ul#tabs.nav.nav-tabs(role="tablist")
                  li.active(role="presentation")
                    a(href="#last-days" aria-controls="last-days" role="tab" data-toggle="tab")
                      span Últimos 30 días
                  li(role="presentation")
                    a(href="#by-range" aria-controls="by-range" role="tab" data-toggle="tab")
                      span Por rango
<<<<<<< HEAD
                  li(role="presentation")
                    a(href="#by-week" aria-controls="by-week" role="tab" data-toggle="tab")
                      span Por Semana
                  //- li(role="presentation")
                    a(href="#by-hour" aria-controls="by-hour" role="tab" data-toggle="tab")
                      span Por Hora
=======
>>>>>>> master

                .tab-content.has-title
                  #last-days.tab-pane.fade.in.active(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
<<<<<<< HEAD
                          .form(onsubmit="event.preventDefault()")
=======
                          form(onsubmit="event.preventDefault()")
>>>>>>> master
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
<<<<<<< HEAD
                                      input.date-picker-days#last30(type="text", data-date-end-date="0d", name="last30", placeholder="Seleccione")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              
                              .col-md-3.hidden
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="last30-channel")
                                        option(value="" selected disabled) Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")

                              .col-md-3
                                button.btn(button, onclick="getDateInput('last30', 'origen', 'last-days', 'chart_div', 'last30-channel')") Filtrar
                        
=======
                                      input.date-picker-days#last30(type="text", data-date-end-date="0d", name="last30", placeholder="Seleccione",autocomplete="off")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('last30', 'origen', 'last-days', 'chart_div')") Filtrar
>>>>>>> master
                        .col-md-12
                          .inner
                            h5 Valoraciones por Origen <b>últimos 30 días</b> <span></span>
                            #chart_div
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")
        
                  #by-range.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
<<<<<<< HEAD
                          .form(onsubmit="event.preventDefault()")
=======
                          form(onsubmit="event.preventDefault()")
>>>>>>> master
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
<<<<<<< HEAD
                                      input.date-picker-days#desde(type="text", data-date-end-date="0d", name="", placeholder="Seleccione desde")
=======
                                      input.date-picker-days#desde(type="text", data-date-end-date="0d", name="", placeholder="Seleccione desde",autocomplete="off")
>>>>>>> master
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
<<<<<<< HEAD
                                      input.date-picker-days#hasta(type="text", data-date-end-date="0d", name="", placeholder="Seleccione hasta")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3.hidden
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="range-channel")
                                        option(value="" selected disabled) Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('desde', 'origen', 'by-range', 'chart_by_range', 'range-channel')") Filtrar
=======
                                      input.date-picker-days#hasta(type="text", data-date-end-date="0d", name="", placeholder="Seleccione hasta",autocomplete="off")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('desde', 'origen', 'by-range', 'chart_by_range')") Filtrar
>>>>>>> master
                        .col-md-12
                          .inner
                            h5 Valoraciones por Origen <b>entre fechas</b>
                            #chart_by_range
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

<<<<<<< HEAD
                  #by-week.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          .form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#week(type="text", data-date-end-date="0d", name="", placeholder="Seleccione día")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3.hidden
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="week-channel")
                                        option(value="" selected disabled) Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('week', 'origen', 'by-week', 'chart_by_week', 'week-channel')") Filtrar
                        .col-md-12
                          .inner.clearfix
                            h5 Valoraciones <b>por semanas</b>
                            #chart_by_week

                            a.download-cvs(pull-right)
                              | Descargar CSV
                              i.fa.fa-file-excel-o(aria-hidden="true")

                  //- #by-hour.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#hour(type="text", data-date-end-date="0d", name="", placeholder="Seleccione día")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="hour-channel")
                                        option(value="" selected disabled) Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('hour', 'origen', 'by-hour', 'chart_by_hour', 'hour-channel')") Filtrar
                        .col-md-12
                          .inner.clearfix
                            h5 Valoraciones <b>por hora</b>
                            #chart_by_hour

                            a.download-cvs(pull-right)
                              | Descargar CSV
                              i.fa.fa-file-excel-o(aria-hidden="true")



=======
>>>>>>> master
    include ../../includes/modal.pug
    include ../../includes/modal-script.pug

    script(type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js")
<<<<<<< HEAD
    script(type="text/javascript" src= myPath +'/assets/js/moment.min.js')
=======
>>>>>>> master
    script(type="text/javascript" src= myPath +'/assets/js/bootstrap.min.js')
    script(type="text/javascript" src= myPath +'/assets/js/bootstrap-datepicker.js')
    script(type="text/javascript" src= myPath +'/assets/js/date.js')
    script(type="text/javascript" src= myPath +'/assets/js/main.js')

    script.

      var d = new Date();
      var e = new Date();
          f = e.setDate(e.getDate() - 30);
          g = new Date(f);

      var month = new Array();
<<<<<<< HEAD
          month[0] = "Enero";
          month[1] = "Febrero";
          month[2] = "Marzo";
          month[3] = "Abril";
          month[4] = "Mayo";
          month[5] = "Junio";
          month[6] = "Julio";
          month[7] = "Agosto";
          month[8] = "Septiembre";
          month[9] = "Octubre";
          month[10] = "Noviembre";
          month[11] = "Diciembre";
      var n = month[d.getMonth()],
          getSession = "1",
          getTkn = sessionStorage.getItem('tkn');
          //- getTheToken = '';

      //- if (sessionStorage.getItem('tkn')) {
      //-   getTheToken = '?token='+sessionStorage.getItem('tkn');
      //- } else {
      //-   getTheToken = '';
      //- }
      
      function getDateInput(input, type, tab, chartName, selector){

        var getInputVal   = document.getElementById(input).value || new Date().toISOString().slice(0,10),
=======
      month[0] = "Enero";
      month[1] = "Febrero";
      month[2] = "Marzo";
      month[3] = "Abril";
      month[4] = "Mayo";
      month[5] = "Junio";
      month[6] = "Julio";
      month[7] = "Agosto";
      month[8] = "Septiembre";
      month[9] = "Octubre";
      month[10] = "Noviembre";
      month[11] = "Diciembre";
      var n = month[d.getMonth()];
      var getSession = user.user_id,
        getTkn = user.tkn;
      
      function getDateInput(input, type, tab, chartName){

        var getInputVal   = document.getElementById(input).value,
>>>>>>> master
            getDesde      = document.getElementById('desde').value,
            getHasta      = document.getElementById('hasta').value,
            desdeDate     = new Date(getDesde),
            hastaDate     = new Date(getHasta),
            getDate       = new Date(getInputVal),
            dateStart     = '',
            dateEnd       = '',
<<<<<<< HEAD
            getInputEnd   = getHasta;
=======
            getInputEnd   = document.getElementById('hasta').value;
>>>>>>> master

        var getMonth      = getDate.getMonth(),
            getYear       = getDate.getFullYear();

        var lastDay       = new Date(getYear, getMonth + 1, 0),
            formatDate    = getDate.setDate(getDate.getDate() - 30),
            getDateFormat = new Date(formatDate),
            getDateFormat = getDateFormat.toISOString().substring(0,10);

        var myResponse    = '';

        if(tab == 'last-days'){
          dateEnd = getInputVal;
<<<<<<< HEAD
          dateStart = moment(getInputVal, "YYYY-MM-DD").subtract(30, 'days').format('YYYY-MM-DD');
          getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
        }else if(tab == 'by-week'){
          dateEnd = getInputVal;
          dateStart = moment(getInputVal, "YYYY-MM-DD").subtract(7, 'days').format('YYYY-MM-DD');
          getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
        }else if(tab == 'by-hour'){
          getInteractions(type, getInputVal, getInputVal, getSession, chartName, selector);
        }else {
=======
          dateStart = getDateFormat;
          getInteractions(type, dateStart, dateEnd, getSession, chartName);
        } else {
>>>>>>> master
          if(desdeDate >= hastaDate) {
            $('#desde, #hasta').addClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').addClass('error');  
          } else {
            $('#desde, #hasta').removeClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').removeClass('error');
<<<<<<< HEAD
            dateEnd = getHasta ? getHasta : moment().format('YYYY-MM-DD');
            dateStart = getDesde ? getDesde : moment().subtract(30, 'days').format('YYYY-MM-DD');
            getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
=======
            dateEnd = getHasta;
            dateStart = getDesde;
            getInteractions(type, dateStart, dateEnd, getSession, chartName);
>>>>>>> master
          }
        }
        return false;
      }

      $('.date-picker-days').datepicker({
        language: 'es',
        minViewMode: 'days'
      });

<<<<<<< HEAD
      function getInteractions(tipo, fechaIni, fechaFin, id, divId, selector){
        var getCanal = document.getElementById(selector).value;
        if(getCanal == ''){
          getCanal = "all";
        }
        var promise = $.ajax({
          type: 'POST',
          url: getPath+"mant/filtros",
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer "+getTkn
          },
=======
      function getInteractions(tipo, fechaIni, fechaFin, id, divId){

        var promise = $.ajax({
          type: 'POST',
          url: getPath+"mant/filtros",
>>>>>>> master
          data:  JSON.stringify(
            {
              tipo: tipo,
              inicio: fechaIni,
              fin: fechaFin,
<<<<<<< HEAD
              id_cliente: id,
              canal: getCanal
            }
          ),
          dataType: 'json',
          contentType: 'application/json; charset=utf-8'
        }).done(function(response){

          if(response.status == 400){
            $('#'+divId).html('<p>No se han encontrado datos</p>')
=======
              id_cliente: id
            }
          ),
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer "+getTkn,
            "Cache-Control": "no-cache",
          },
          dataType: 'json',
          contentType: 'application/json; charset=utf-8'
        }).done(function(response){
          if(response.estado !== undefined && response.estado.codigoEstado !== 200){
            $('#'+divId).html('<p>No se han encontrado datos</p>');
>>>>>>> master
            return false;
          }

          createCSV(response.csv, 'origen');
          google.charts.load("current", {packages:['corechart']});
          google.charts.setOnLoadCallback(drawChart);
          function drawChart() {
            var chartData = [['', 'Valoraciones', { role: "style" }]];
<<<<<<< HEAD
            
            if(response.descripcion[0])
              chartData.push(['APP', response.descripcion[0].cantidad, 'color: #e7b81d'])

            if(response.descripcion[1])
              chartData.push(['SITIO PÚBLICO', response.descripcion[1].cantidad, 'color: #043d5d'])

            if(response.descripcion[2])
              chartData.push(['SITIO PRIVADO', response.descripcion[2].cantidad, 'color: #1c75bc']);
=======

            if(response.descripcion[0])
              chartData.push(['APP', response.descripcion[0].cantidad , 'color: #1c75bc'])

            if(response.descripcion[1])
              chartData.push(['DESKTOP', response.descripcion[1].cantidad, 'color: #043d5d']);

            if(response.descripcion[2])
              chartData.push(['MOBILE', response.descripcion[2].cantidad, 'color: #1c75bc']);
>>>>>>> master

            var data = google.visualization.arrayToDataTable(chartData);
            var view = new google.visualization.DataView(data);
            view.setColumns(
              [0, 1, {
                type: "string",
                role: "annotation"
              },
              2]
            );
            var options = {
              height: 280,
              hAxis: {
                textStyle: {
                  fontName: 'Roboto',
                  bold: true
                },
                title: '',
                titleTextStyle: {
                  color: '#f00'
                },
                minValue: 1,
                gridlines: {
                  color: 'none'
                }
              },
              vAxis: {
                minValue: 0,
                textStyle: {
                  fontName: 'Roboto',
                  bold: true
                }
              },
              chartArea:{
                left: '5%',
                top: '5%',
                width: '93%',
                height: '75%'
              },
              legend: 'none',
              pointSize: 9,
              tooltip: {
                showColorCode: true,
                textStyle: {
                  color: '#1c75bc',
                  fontName: 'Roboto',
                }
              },
              areaOpacity: .85,
              is3D: true,
              backgroundColor: {
                fill: 'transparent'
              },
              legend: {
                position: 'none'
              },
              bar: {
                groupWidth: "20%"
              }
            };
            var chart = new google.visualization.ColumnChart(document.getElementById(divId));
            chart.draw(view, options);
          }
<<<<<<< HEAD
        });
      }

      getInteractions('origen', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_div', 'last30-channel');

      $('a[href="#by-range"]').on('shown.bs.tab', function (e){
        getInteractions('origen', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_by_range', 'range-channel');
      });

      $('a[href="#by-week"]').on('shown.bs.tab', function (event){
        getInteractions('origen', moment().subtract(7, 'days').format('YYYY-MM-DD'), moment().format('YYYY-MM-DD'), getSession, 'chart_by_week', 'week-channel');
      });
=======

        });
      }

      $('a[href="#by-range"]').on('shown.bs.tab', function (e) {
        getInteractions('origen', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_by_range');
      })

      function initial(){
        if(hasToken){
          getInteractions('origen', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_div');
        }else{
          setTimeout(()=>{
            initial();
          },300);
        }
      }

      initial();
>>>>>>> master

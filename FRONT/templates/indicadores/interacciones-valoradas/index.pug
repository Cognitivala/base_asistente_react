html(lang="es-CL" dir="ltr" xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://ogp.me/ns/fb#" heightfull)
  head
    title Interacciones Valoradas. MAD Cognitiva
    
    include ../../includes/meta.pug
    script(src="https://www.gstatic.com/charts/loader.js")
    link(href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet")

  body.no-scroll(heightfull)
  
    #wrapper(heightfull)
      .f-row(heightfull)
        
        include ../../includes/menu.pug

        .f-col.content(padding heightfull)
          
          include ../../includes/user.pug
          
          .row
            .col-md-12

              h1.title-page Interacciones Valoradas

              .container-tabs

                ul#tabs.nav.nav-tabs(role="tablist")
                  li.active(role="presentation")
                    a(href="#last-days" aria-controls="last-days" role="tab" data-toggle="tab")
                      span Últimos 30 días
                  li(role="presentation")
                    a(href="#by-range" aria-controls="by-range" role="tab" data-toggle="tab")
                      span Por rango
                  li(role="presentation")
                    a(href="#by-week" aria-controls="by-week" role="tab" data-toggle="tab")
                      span Por semana
                  li(role="presentation")
                    a(href="#by-hour" aria-controls="by-hour" role="tab" data-toggle="tab")
                      span Por hora
                  li(role="presentation")
                    a(href="#ranking" aria-controls="by-hour" role="tab" data-toggle="tab")
                      span Ranking

                .tab-content.has-title
                  #last-days.tab-pane.fade.in.active(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          .form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#last30(type="text", data-date-end-date="0d", name="last30", placeholder="Seleccione")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="last30-channel")
                                        option(value="" selected disabled) Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")

                              .col-md-3
                                button.btn(button, onclick="getDateInput('last30', 'interacciones_valoradas', 'last-days', 'chart_div', 'last30-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>últimos 30 días</b> <span></span>
                            #chart_div
                              
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")
        
                  #by-range.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#desde(type="text", data-date-end-date="0d", name="", placeholder="Seleccione desde")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#hasta(type="text", data-date-end-date="0d", name="", placeholder="Seleccione hasta")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="desde-channel")
                                        option(value="") Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")  
                              .col-md-3
                                button.btn(button, onclick="getDateInput('desde', 'interacciones_valoradas', 'by-range', 'chart_by_range', 'desde-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>entre fechas</b>
                            #chart_by_range
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

                  #by-week.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#week(type="text", data-date-end-date="0d", name="", placeholder="Seleccione un día")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="week-channel")
                                        option(value="") Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('week', 'interacciones_valoradas', 'by-week', 'chart_by_week', 'week-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>por semanas</b>
                            #chart_by_week
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

                  #by-hour.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#hour(type="text", data-date-end-date="0d", name="", placeholder="Seleccione día")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="hour-channel")
                                        option(value="") Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('hour', 'interacciones_valoradas', 'by-hour', 'chart_by_hour', 'hour-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>por hora</b>
                            #chart_by_hour
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

                  #ranking.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#desde-ranking(type="text", data-date-end-date="0d", name="", placeholder="Seleccione desde")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#hasta-ranking(type="text", data-date-end-date="0d", name="", placeholder="Seleccione hasta")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.select
                                      select.box-field(id="ranking-channel")
                                        option(value="") Selecciona canal
                                        option(value="App") App
                                        option(value="SitioPublico") Sitio Público
                                        option(value="SitioPrivado") Sitio Privado
                                      span.input-group-addon
                                        i.fa.fa-sort-down(aria-hidden="true") 
                              .col-md-3
                                button.btn(button, onclick="getRanking()") Filtrar
                        .col-md-12
                          .inner
                            h5 Ranking de interacciones</b>
                            table#chart_by_ranking.table.table-striped.table-bordered
                              thead
                                tr
                                  th #
                                  th Intent
                                  th Frecuencia
                                  th % valoración
                                  th Canal
                                  th Valoración
                                  th Fue útil
                              tbody
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

    include ../../includes/modal.pug
    include ../../includes/modal-script.pug

    script(type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js")
    script(type="text/javascript" src= myPath +'/assets/js/moment.min.js')
    script(type="text/javascript" src= myPath +'/assets/js/bootstrap.min.js')
    script(type="text/javascript" src= myPath +'/assets/js/bootstrap-datepicker.js')
    script(type="text/javascript" src= myPath +'/assets/js/date.js')
    script(type="text/javascript" src= myPath +'/assets/js/main.js')

    script.

      var d = new Date();
      var e = new Date();
          f = e.setDate(e.getDate() - 30);
          w = e.setDate(e.getDate() - 10);
          g = new Date(f);

      var valArray = [],
          promise;

      var month = new Array();
          month[0] = "Enero";
          month[1] = "Febrero";
          month[2] = "Marzo";
          month[3] = "Abril";
          month[4] = "Mayo";
          month[5] = "Junio";
          month[6] = "Julio";
          month[7] = "Agosto";
          month[8] = "Septiembre";
          month[9] = "Octubre";
          month[10] = "Noviembre";
          month[11] = "Diciembre";

      var n = month[d.getMonth()],
          getSession = "1",
          getTkn = sessionStorage.getItem('tkn');
          //- getTheToken = '';

      //- if (sessionStorage.getItem('tkn')) {
      //-   getTheToken = '?token='+sessionStorage.getItem('tkn');
      //- } else {
      //-   getTheToken = '';
      //- }

      function getRanking(){
        $.ajax({
          type: 'POST',
          url: getPath+'mant/ranking',
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer "+getTkn
          },
          data:  JSON.stringify(
            {
              inicio: $('#desde-ranking').val() ? $('#desde-ranking').val() :  moment().subtract(30, 'days').format('YYYY-MM-DD'),
              fin: $('#hasta-ranking').val() ? $('#hasta-ranking').val() :  moment().format('YYYY-MM-DD'),
              id_cliente: getSession,
              canal: $('#ranking-channel').val() ? $('#ranking-channel').val() : 'all'
            }
          ),
          dataType: 'json',
          contentType: 'application/json; charset=utf-8'
        }).done(function(response){
          createCSV(response.csv, 'ranking');

          var data = response.descripcion,
              html = '',
              $container = $('#chart_by_ranking');

          $('.error-msg').remove();

          if(response.status == 400){
            html += '<p class="error-msg">'+ data +'</p>';
            $container.find('tbody').html('');
            $container.parent().append(html)
          }else{
            for(var i = 0; i < data.length; i++){
              html += '<tr>';
              html += '<td>'+ (i + 1) +'</td>';
              html += '<td>'+ data[i].dominio +'</td>';
              html += '<td>'+ data[i].frecuencia +'</td>';
              html += '<td>'+ Math.round( (data[i].porcentaje_valoracion * 100) * 10) / 10  +'%</td>';
              html += '<td>'+ data[i].canal +'</td>';
              html += '<td>'+ Math.round( (data[i].valoraciones) * 10) / 10  +'</td>';
              html += '<td>';
              html += '<span class="splitBox">';
              html += '<span class="splitTerm">Si</span>';
              html += '<span class="splitValue">'+ Math.round( (data[i].si * 100) * 10) / 10  +'%</span>';
              html += '</span>';
              html += '<span class="splitBox">';
              html += '<span class="splitTerm">No</span>';
              html += '<span class="splitValue">'+ Math.round( (data[i].no * 100) * 10) / 10  +'%</span>';
              html += '</span>';
              html += '</td>';
              html += '</tr>';
            }
            $container.find('tbody').html(html);
          }
        });
      }
      
      function getDateInput(input, type, tab, chartName, selector){

        var getInputVal   = document.getElementById(input).value || new Date().toISOString().slice(0,10),
            getDesde      = document.getElementById('desde').value,
            getHasta      = document.getElementById('hasta').value,
            desdeDate     = new Date(getDesde),
            hastaDate     = new Date(getHasta),
            getDate       = new Date(getInputVal),
            dateStart     = '',
            dateEnd       = '',
            getInputEnd   = getHasta;

        var getMonth      = getDate.getMonth(),
            getYear       = getDate.getFullYear();

        var lastDay       = new Date(getYear, getMonth + 1, 0),
            formatDate    = getDate.setDate(getDate.getDate() - 30),
            getDateFormat = new Date(formatDate),
            getDateFormat = getDateFormat.toISOString().substring(0,10);

        var myResponse    = '';

        if(tab == 'last-days'){
          dateEnd = getInputVal;
          dateStart = moment(getInputVal, "YYYY-MM-DD").subtract(30, 'days').format('YYYY-MM-DD');
          getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
          //- getInteractions_val('interacciones_valoradas', dateStart, dateEnd, getSession, selector);
        }else if(tab == 'by-week'){
          dateEnd = getInputVal;
          dateStart = moment(getInputVal, "YYYY-MM-DD").subtract(7, 'days').format('YYYY-MM-DD');
          getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
          //- getInteractions_val('interacciones_valoradas', dateStart, dateEnd, getSession, selector);
        }else if(tab == 'by-hour'){
          getInteractions(type, getInputVal, getInputVal, getSession, chartName, selector);
          //- getInteractions_val('interacciones_valoradas', dateStart, dateEnd, getSession, selector);
        }else {
          if(desdeDate >= hastaDate) {
            $('#desde, #hasta').addClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').addClass('error');  
          } else {
            $('#desde, #hasta').removeClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').removeClass('error');
            dateEnd = getHasta ? getHasta : moment().format('YYYY-MM-DD');
            dateStart = getDesde ? getDesde : moment().subtract(30, 'days').format('YYYY-MM-DD');
            getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
            //- getInteractions_val('interacciones_valoradas', dateStart, dateEnd, getSession, selector);
          }
        }
        return false;
      }

      $('.date-picker-days').datepicker({
        language: 'es',
        minViewMode: 'days'
      });

      function getInteractions_val(tipo, fechaIni, fechaFin, id, selector){
        var getCanal = document.getElementById(selector).value;
        if(getCanal == ''){
          getCanal = "all";
        }
        var promise = $.ajax({
          type: 'POST',
          url: getPath+'mant/filtros',
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer "+getTkn
          },
          data:  JSON.stringify(
            {
              tipo: tipo,
              inicio: fechaIni,
              fin: fechaFin,
              id_cliente: id,
              canal: getCanal
            }
          ),
          dataType: 'json',
          contentType: 'application/json; charset=utf-8'
        }).done(function(response){
          createCSV(response.csv, 'interacciones_valoradas');
          for(var i = 0; i < response.respuesta.length; i++) {
            valArray.push(response.respuesta[i].total);
          }
          //- promise = valArray;
          //- console.log('promise', promise);
        });
      }
      
      function getInteractions(tipo, fechaIni, fechaFin, id, divId, selector){
        var getCanal = document.getElementById(selector).value;
        if(getCanal == ''){
          getCanal = "all";
        }
        var promise = $.ajax({
          type: 'POST',
          url: getPath+'mant/filtros',
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer "+getTkn
          },
          data:  JSON.stringify(
            {
              tipo: tipo,
              inicio: fechaIni,
              fin: fechaFin,
              id_cliente: id,
              canal: getCanal
            }
          ),
          dataType: 'json',
          contentType: 'application/json; charset=utf-8'
        }).done(function(response){
          if(response.status == 400){
            $('#'+divId).html('<p>No se han encontrado datos</p>')
            return false;
          }else{
            var data = [
              ['Día', 'Totales', 'Valoradas']
            ];
            var responseData = response.respuesta;

            for(var i = 0; i < responseData.length; i++){
              var day = parseInt(responseData[i].dia)+' '+month[parseInt(responseData[i].mes) - 1];
              if($('#by-hour').hasClass('active') == true)
                day = responseData[i].hora + ':00';
              data.push([day, responseData[i].total_interacciones, responseData[i].total_interacciones_valoradas])
            }

            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
              var arrayData = google.visualization.arrayToDataTable(data)
              var getMyArray = [['días', 'interacciones', 'interacciones valoradas']];

              var options = {
                  height: 280,
                  hAxis: {
                    textStyle: {
                      fontName: 'Roboto',
                      bold: true
                    },
                    title: '',
                    titleTextStyle: {
                      color: '#f00'
                    },
                    minValue: 1,
                    maxValue: (getMyArray.length - 1),
                    gridlines: {
                      color: 'none'
                    }
                  },
                  vAxis: {
                    minValue: 0,
                    textStyle: {
                      fontName: 'Roboto',
                      bold: true
                    }
                  },
                  chartArea:{
                    left: '5%',
                    top: '5%',
                    width: '93%',
                    height: '75%'
                  },
                  crosshair: {
                    focused: {
                      color: '#3bc',
                      opacity: 0.8
                    }
                  },
                  legend: 'none',
                  pointSize: 9,
                  tooltip: {
                    showColorCode: true,
                    textStyle: {
                      color: '#1c75bc',
                      fontName: 'Roboto',
                    }
                  },
                  colors:['#007fa3', '#001e37'],
                  areaOpacity: 0.9,
                  backgroundColor: { fill:'transparent' }
                };
                var chart = new google.visualization.AreaChart(document.getElementById(divId));
                chart.draw(arrayData, options);
            }
          }
        });
      }

      getInteractions('interacciones_valoradas', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_div', 'last30-channel')

      $('a[href="#by-range"]').on('shown.bs.tab', function (e){
        getInteractions('interacciones_valoradas', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_by_range', 'desde-channel');
      });

      $('a[href="#by-week"]').on('shown.bs.tab', function (event){
        getInteractions('interacciones_valoradas', moment().subtract(7, 'days').format('YYYY-MM-DD'), moment().format('YYYY-MM-DD'), getSession, 'chart_by_week', 'week-channel');
      });

      $('a[href="#by-hour"]').on('shown.bs.tab', function (event){
        getInteractions('interacciones_valoradas', moment().format('YYYY-MM-DD'), moment().format('YYYY-MM-DD'), getSession, 'chart_by_hour', 'hour-channel')
      });

      $('a[href="#ranking"]').on('shown.bs.tab', function (event){
        getRanking();
      });


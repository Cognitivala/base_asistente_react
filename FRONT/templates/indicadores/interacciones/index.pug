html(lang="es-CL" dir="ltr" xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://ogp.me/ns/fb#" heightfull)
  head
    title Interacciones. MAD Cognitiva
    
    include ../../includes/meta.pug
    script(src="https://www.gstatic.com/charts/loader.js")
    link(href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet")

  body.no-scroll(heightfull)
  
    #wrapper(heightfull)
      .f-row(heightfull)
        
        include ../../includes/menu.pug

        .f-col.content(padding heightfull)
          
          include ../../includes/user.pug
          
          .row
            .col-md-12

              h1.title-page Interacciones

              .container-tabs

                ul#tabs.nav.nav-tabs(role="tablist")
                  li.active(role="presentation")
                    a(href="#last-days" aria-controls="last-days" role="tab" data-toggle="tab")
                      span Últimos 30 días
                  li(role="presentation")
                    a(href="#by-range" aria-controls="by-range" role="tab" data-toggle="tab")
                      span Por rango
                  li(role="presentation")
                    a(href="#by-week" aria-controls="by-week" role="tab" data-toggle="tab")
                      span Por semana
                  li(role="presentation")
                    a(href="#by-hour" aria-controls="by-hour" role="tab" data-toggle="tab")
                      span Por hora

                .tab-content.has-title
                  #last-days.tab-pane.fade.in.active(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#last30(type="text", data-date-end-date="0d", name="last30", placeholder="Seleccione",autocomplete="off")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              //- .col-md-3
                              //-   fieldset
                              //-     .form-group
                              //-       .input-group.select
                              //-         select.box-field(id="last30-channel")
                              //-           option(value="" selected disabled) Selecciona canal
                              //-           option(value="App") App
                              //-           option(value="Desktop") Desktop
                              //-           option(value="Mobile") Mobile
                              //-         span.input-group-addon
                              //-           i.fa.fa-sort-down(aria-hidden="true")

                              .col-md-3
                                button.btn(button, onclick="getDateInput('last30', 'interacciones', 'last-days', 'chart_div', 'last30-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>últimos 30 días</b> <span></span>
                            .row
                              .col-md-12
                                #chart_div
                              .col-md-6
                      a.download-interactions-cvs(href="#;", onclick="downInteractions('last-days')", pull-left)
                        | Descargar Total Interacciones
                        i.fa.fa-envelope(aria-hidden="true")
                      a.hide
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")
        
                  #by-range.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#desde(type="text", data-date-end-date="0d", name="", placeholder="Seleccione desde",autocomplete="off")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#hasta(type="text", data-date-end-date="0d", name="", placeholder="Seleccione hasta",autocomplete="off")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              //- .col-md-3
                              //-   fieldset
                              //-     .form-group
                              //-       .input-group.select
                              //-         select.box-field(id="desde-channel")
                              //-           option(value="") Selecciona canal
                              //-           option(value="App") App
                              //-           option(value="Desktop") Desktop
                              //-           option(value="Mobile") Mobile
                              //-         span.input-group-addon
                              //-           i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('desde', 'interacciones', 'by-range', 'chart_by_range', 'desde-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>entre fechas</b>
                            #chart_by_range
                      a.download-interactions-cvs(href="#;", onclick="downInteractions('by-range')" ,pull-left)
                        | Descargar Total Interacciones
                        i.fa.fa-file-excel-o(aria-hidden="true")
                      a.hide
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

                  #by-week.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#week(type="text", data-date-end-date="0d", name="", placeholder="Seleccione un día",autocomplete="off")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              //- .col-md-3
                              //-   fieldset
                              //-     .form-group
                              //-       .input-group.select
                              //-         select.box-field(id="week-channel")
                              //-           option(value="") Selecciona canal
                              //-           option(value="App") App
                              //-           option(value="Desktop") Desktop
                              //-           option(value="Mobile") Mobile
                              //-         span.input-group-addon
                              //-           i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('week', 'interacciones', 'by-week', 'chart_by_week', 'week-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>por semanas</b>
                            #chart_by_week
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

                  #by-hour.tab-pane.fade(role="tabpanel")
                    .scroll
                      .row
                        .col-md-12
                          form(onsubmit="event.preventDefault()")
                            .row
                              .col-md-3
                                fieldset
                                  .form-group
                                    .input-group.date
                                      input.date-picker-days#hour(type="text", data-date-end-date="0d", name="", placeholder="Seleccione día",autocomplete="off")
                                      span.input-group-addon
                                        i.fa.fa-calendar(aria-hidden="true")
                              //- .col-md-3
                              //-   fieldset
                              //-     .form-group
                              //-       .input-group.select
                              //-         select.box-field(id="hour-channel")
                              //-           option(value="") Selecciona canal
                              //-           option(value="App") App
                              //-           option(value="Desktop") Desktop
                              //-           option(value="Mobile") Mobile
                              //-         span.input-group-addon
                              //-           i.fa.fa-sort-down(aria-hidden="true")
                              .col-md-3
                                button.btn(button, onclick="getDateInput('hour', 'interacciones', 'by-hour', 'chart_by_hour', 'hour-channel')") Filtrar
                        .col-md-12
                          .inner
                            h5 Interacciones <b>por hora</b>
                            #chart_by_hour
                      a.download-cvs(pull-right)
                        | Descargar CSV
                        i.fa.fa-file-excel-o(aria-hidden="true")

    .toast
      p
        strong Excelente!
      p El documento con las interacciones se ha enviado a <span></span>

    include ../../includes/modal.pug
    include ../../includes/modal-script.pug

    script(type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js")
    script(type="text/javascript" src= myPath+'/assets/js/moment.min.js')
    script(type="text/javascript" src= myPath+'/assets/js/bootstrap.min.js')
    script(type="text/javascript" src= myPath+'/assets/js/bootstrap-datepicker.js')
    script(type="text/javascript" src= myPath+'/assets/js/date.js')
    script(type="text/javascript" src= myPath+'/assets/js/crypto-js.min.js')
    script(type="text/javascript" src= myPath+'/assets/js/main.js')

    script.

      var d = new Date();
      var e = new Date();
          f = e.setDate(e.getDate() - 30);
          w = e.setDate(e.getDate() - 10)
          g = new Date(f);

      var month = new Array();
          month[0] = "Enero";
          month[1] = "Febrero";
          month[2] = "Marzo";
          month[3] = "Abril";
          month[4] = "Mayo";
          month[5] = "Junio";
          month[6] = "Julio";
          month[7] = "Agosto";
          month[8] = "Septiembre";
          month[9] = "Octubre";
          month[10] = "Noviembre";
          month[11] = "Diciembre";

      var n = month[d.getMonth()],
          getSession = "1",
          getTheToken = '',
          getTkn = user.tkn;

      //- if (sessionStorage.getItem('tkn')) {
      //-   getTheToken = '?token='+sessionStorage.getItem('tkn');
      //- } else {
      //-   getTheToken = '';
      //- }
      
      function getDateInput(input, type, tab, chartName, selector){

        var getInputVal   = document.getElementById(input).value || new Date().toISOString().slice(0,10),
            getDesde      = document.getElementById('desde').value,
            getHasta      = document.getElementById('hasta').value,
            desdeDate     = new Date(getDesde),
            hastaDate     = new Date(getHasta),
            getDate       = new Date(getInputVal),
            dateStart     = '',
            dateEnd       = '',
            getInputEnd   = getHasta;

        var getMonth      = getDate.getMonth(),
            getYear       = getDate.getFullYear();

        var lastDay       = new Date(getYear, getMonth + 1, 0),
            formatDate    = getDate.setDate(getDate.getDate() - 30),
            getDateFormat = new Date(formatDate),
            getDateFormat = getDateFormat.toISOString().substring(0,10);

        var myResponse    = '';

        if(tab == 'last-days'){
          dateEnd = getInputVal;
          dateStart = moment(getInputVal, "YYYY-MM-DD").subtract(30, 'days').format('YYYY-MM-DD');
          getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
        }else if(tab == 'by-week'){
          dateEnd = getInputVal;
          dateStart = moment(getInputVal, "YYYY-MM-DD").subtract(7, 'days').format('YYYY-MM-DD');
          getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
        }else if(tab == 'by-hour'){
          getInteractions(type, getInputVal, getInputVal, getSession, chartName, selector);
        }else {
          if(desdeDate >= hastaDate) {
            $('#desde, #hasta').addClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').addClass('error');  
          } else {
            $('#desde, #hasta').removeClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').removeClass('error');
            dateEnd = getHasta ? getHasta : moment().format('YYYY-MM-DD');
            dateStart = getDesde ? getDesde : moment().subtract(30, 'days').format('YYYY-MM-DD');
            getInteractions(type, dateStart, dateEnd, getSession, chartName, selector);
          }
        }
        return false;
      }

      $('.date-picker-days').datepicker({
        language: 'es',
        minViewMode: 'days'
      });

      function getInteractions(tipo, fechaIni, fechaFin, id, divId, selector){
        //- var getCanal = document.getElementById(selector).value;
        //- if(getCanal == ''){
        getCanal = "all";
        //- }
        var promise = $.ajax({
          type: 'POST',
          url: getPath+'mant/filtros',
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer "+getTkn,
            "Cache-Control": "no-cache",
          },
          data:  JSON.stringify(
            {
              tipo: tipo,
              inicio: fechaIni,
              fin: fechaFin,
              id_cliente: id,
              canal: getCanal
            }
          ),
          dataType: 'json',
          contentType: 'application/json; charset=utf-8'
        }).done(function(response){

          if(response.estado !== undefined && response.estado.codigoEstado == 400){
            $('#'+divId).html('<p>No se han encontrado datos</p>')
            return false;
          }

          createCSV(response.csv, 'interacciones');
          var getMyArray = [['días', 'interacciones']];
          var pushArray = [];
          if($('#by-hour').hasClass('active') == true){
            for(var i = 0; i < response.respuesta.length; i++) {
              var hh;
              if(hh < 10){
                hh = '0'+i+':00';
              } else {
                hh = i+':00';
              }
              pushArray = [hh, response.respuesta[i].total];
              getMyArray.push(pushArray); 
            }
          } else {
            for(var i = 0; i < response.respuesta.length; i++) {
              pushArray = [parseInt(response.respuesta[i].dia)+' '+month[parseInt(response.respuesta[i].mes) - 1], response.respuesta[i].total];
              getMyArray.push(pushArray);
            }
          }
          google.charts.load('current', {'packages':['corechart']});
          google.charts.setOnLoadCallback(drawChart);
          function drawChart() {
            var data = google.visualization.arrayToDataTable(getMyArray);
            var options = {
              height: 280,
              hAxis: {
                textStyle: {
                  fontName: 'Roboto',
                  bold: true
                },
                title: '',
                titleTextStyle: {
                  color: '#f00'
                },
                minValue: 1,
                maxValue: (getMyArray.length - 1),
                gridlines: {
                  color: 'none'
                }
              },
              vAxis: {
                minValue: 0,
                textStyle: {
                  fontName: 'Roboto',
                  bold: true
                }
              },
              chartArea:{
                left: '5%',
                top: '5%',
                width: '93%',
                height: '75%'
              },
              crosshair: {
                focused: {
                  color: '#3bc',
                  opacity: 0.8
                }
              },
              legend: 'none',
              pointSize: 9,
              tooltip: {
                showColorCode: true,
                textStyle: {
                  color: '#1c75bc',
                  fontName: 'Roboto',
                }
              },
              colors:['#001e37','#141921'],
              areaOpacity: .85,
              backgroundColor: { fill:'transparent' }
            };
            var chart = new google.visualization.AreaChart(document.getElementById(divId));
            chart.draw(data, options);
          }
        });
      }

      $('a[href="#by-range"]').on('shown.bs.tab', function (e){
        getInteractions('interacciones', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_by_range', 'desde-channel');
      });

      $('a[href="#by-week"]').on('shown.bs.tab', function (event){
        getInteractions('interacciones', moment().subtract(7, 'days').format('YYYY-MM-DD'), moment().format('YYYY-MM-DD'), getSession, 'chart_by_week', 'week-channel');
      });

      $('a[href="#by-hour"]').on('shown.bs.tab', function (event){
        getInteractions('interacciones', moment().format('YYYY-MM-DD'), moment().format('YYYY-MM-DD'), getSession, 'chart_by_hour', 'hour-channel')
      });

      function downInteractions(tab){
        
        var button = event.target.className;
        var boton = event.target;
        var fechaIni, fechaFin, desdeDate, hastaDate;
        var mybool = true;
        fechaIni = document.getElementById('desde').value;
        fechaFin = document.getElementById('hasta').value;
        if(tab == 'last-days'){
          if(document.getElementById('last30').value == ''){
            fechaIni = g.toISOString().substring(0,10);
            fechaFin = d.toISOString().substring(0,10);
          } else {
            fechaFin = document.getElementById('last30').value;
            fechaFin = new Date(fechaFin);
            fechaIni = fechaFin;
            fechaIni = fechaIni.setDate(fechaIni.getDate() - 30);
            fechaIni = new Date(fechaIni);
            fechaFin = fechaFin.setDate(fechaFin.getDate() + 30);
            fechaFin = new Date(fechaFin);
            fechaIni = fechaIni.toISOString().substring(0,10);
            fechaFin = fechaFin.toISOString().substring(0,10);
          }
        } else {
          if(fechaIni != '' || fechaFin != ''){
            
            fechaIni = new Date(fechaIni);
            fechaIni = fechaIni.toISOString().substring(0,10);

            fechaFin = new Date(fechaFin);
            fechaFin = fechaFin.toISOString().substring(0,10);

            $('#desde, #hasta').removeClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').removeClass('error');

            mybool = true;
            
            if(fechaIni >= fechaFin) {
              $('#desde, #hasta').addClass('error');
              $('#desde, #hasta').parent().find('.input-group-addon').addClass('error'); 
              mybool = false;
            } else {
              $('#desde, #hasta').removeClass('error');
              $('#desde, #hasta').parent().find('.input-group-addon').removeClass('error');
              mybool = true;
            }
          } else {
            $('#desde, #hasta').addClass('error');
            $('#desde, #hasta').parent().find('.input-group-addon').addClass('error'); 
            mybool = false;
          }
        }

        if(mybool == true){
          $('.toast p span').text(user.userMail);
          $('.'+button+'').append('<div class="spinner-holder"><div class="spinner"></div></div>');

          var promise = $.ajax({
            type: 'POST',
            url: getPath+"mant/generar_csv",
            data:  JSON.stringify(
              {
                tipo: 'interacciones',
                inicio: fechaIni,
                fin: fechaFin,
                correo: user.userMail
              }
            ),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8'
          }).done(function(response){
            createInteractionsCSV(response.csv, 'total_interacciones', boton);
            setTimeout(()=>{
              $('.'+button).find('.spinner-holder').remove();
            },200);
          });
        }

      }

      function initial(){
        if(hasToken){
          getInteractions('interacciones', g.toISOString().substring(0,10), d.toISOString().substring(0,10), getSession, 'chart_div', 'last30-channel');
        }else{
          setTimeout(()=>{
            initial();
          },300);
        }
      }

      initial();